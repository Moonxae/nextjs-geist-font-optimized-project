{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/CommandCenter.tsx"],"sourcesContent":["/**\n * CommandCenter.tsx\n * Real-time telemetry and log monitoring component\n */\n\n\"use client\"\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\ninterface LogEntry {\n  timestamp: string;\n  type: string;\n  severity: 'info' | 'warning' | 'error';\n  data: any;\n  botId?: string;\n}\n\nexport default function CommandCenter() {\n  const [logs, setLogs] = useState<LogEntry[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [severityFilter, setSeverityFilter] = useState<string>('all');\n  const [botIdFilter, setBotIdFilter] = useState<string>('all');\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  const fetchLogs = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      params.append('limit', '100');\n      \n      if (severityFilter !== 'all') {\n        params.append('severity', severityFilter);\n      }\n      if (botIdFilter !== 'all') {\n        params.append('botId', botIdFilter);\n      }\n\n      const response = await fetch(`/api/bot/logs?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setLogs(data.logs || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearLogs = async () => {\n    try {\n      const response = await fetch('/api/bot/logs', { method: 'DELETE' });\n      if (response.ok) {\n        setLogs([]);\n      }\n    } catch (error) {\n      console.error('Failed to clear logs:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchLogs();\n  }, [severityFilter, botIdFilter]);\n\n  useEffect(() => {\n    if (!autoRefresh) return;\n    \n    const interval = setInterval(fetchLogs, 3000); // Refresh every 3 seconds\n    return () => clearInterval(interval);\n  }, [autoRefresh, severityFilter, botIdFilter]);\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'error': return 'bg-red-100 text-red-800';\n      case 'warning': return 'bg-yellow-100 text-yellow-800';\n      case 'info': return 'bg-blue-100 text-blue-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n\n  const getUniqueValues = (key: keyof LogEntry) => {\n    const values = logs.map(log => log[key]).filter(Boolean);\n    return [...new Set(values)];\n  };\n\n  const logStats = {\n    total: logs.length,\n    errors: logs.filter(log => log.severity === 'error').length,\n    warnings: logs.filter(log => log.severity === 'warning').length,\n    info: logs.filter(log => log.severity === 'info').length,\n    uniqueBots: getUniqueValues('botId').length\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Image */}\n      <div className=\"relative h-32 overflow-hidden rounded-lg bg-gray-100\">\n        <img \n          src=\"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/48a35b5e-9c95-4d11-9083-907d082dc432.png\" \n          alt=\"Command Center dashboard displaying realtime bot control logs and status\"\n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            e.currentTarget.style.display = 'none';\n          }}\n        />\n        <div className=\"absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center\">\n          <div className=\"text-center text-white\">\n            <h2 className=\"text-2xl font-bold\">Command Center</h2>\n            <p className=\"text-sm\">Real-time Bot Telemetry & Monitoring</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{logStats.total}</div>\n            <p className=\"text-xs text-gray-600\">Total Events</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-red-600\">{logStats.errors}</div>\n            <p className=\"text-xs text-gray-600\">Errors</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-yellow-600\">{logStats.warnings}</div>\n            <p className=\"text-xs text-gray-600\">Warnings</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-blue-600\">{logStats.info}</div>\n            <p className=\"text-xs text-gray-600\">Info</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{logStats.uniqueBots}</div>\n            <p className=\"text-xs text-gray-600\">Active Bots</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Controls */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Log Controls</CardTitle>\n          <CardDescription>Filter and manage bot telemetry logs</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-4 items-center\">\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium\">Severity:</label>\n              <Select value={severityFilter} onValueChange={setSeverityFilter}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All</SelectItem>\n                  <SelectItem value=\"info\">Info</SelectItem>\n                  <SelectItem value=\"warning\">Warning</SelectItem>\n                  <SelectItem value=\"error\">Error</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium\">Bot ID:</label>\n              <Select value={botIdFilter} onValueChange={setBotIdFilter}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Bots</SelectItem>\n                  {getUniqueValues('botId').map((botId) => (\n                    <SelectItem key={botId} value={botId as string}>\n                      {(botId as string).substring(0, 12)}...\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => setAutoRefresh(!autoRefresh)}\n            >\n              {autoRefresh ? 'Pause' : 'Resume'} Auto-refresh\n            </Button>\n\n            <Button variant=\"outline\" size=\"sm\" onClick={fetchLogs} disabled={loading}>\n              {loading ? 'Refreshing...' : 'Refresh'}\n            </Button>\n\n            <Button variant=\"destructive\" size=\"sm\" onClick={clearLogs}>\n              Clear Logs\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Logs Display */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Real-time Event Log</CardTitle>\n          <CardDescription>\n            Live telemetry from all active bots ({logs.length} events)\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {logs.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              No logs available. Start some bots to see telemetry data.\n            </div>\n          ) : (\n            <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n              {logs.slice(0, 50).map((log, index) => (\n                <div key={index} className=\"flex items-start space-x-3 p-3 border rounded-lg text-sm\">\n                  <div className=\"flex-shrink-0\">\n                    <Badge className={getSeverityColor(log.severity)}>\n                      {log.severity}\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">{log.type}</span>\n                      <span className=\"text-gray-500 text-xs\">\n                        {formatTimestamp(log.timestamp)}\n                      </span>\n                      {log.botId && (\n                        <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                          {log.botId.substring(0, 8)}...\n                        </span>\n                      )}\n                    </div>\n                    \n                    {log.data && Object.keys(log.data).length > 0 && (\n                      <div className=\"mt-1 text-xs text-gray-600\">\n                        {JSON.stringify(log.data, null, 0).substring(0, 200)}\n                        {JSON.stringify(log.data).length > 200 && '...'}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1400, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AbuseDashboard.tsx"],"sourcesContent":["/**\n * AbuseDashboard.tsx\n * Modern dashboard for Scraping & Abuse Engine with campaign controls and analytics\n */\n\n\"use client\"\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { Switch } from '@/components/ui/switch';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface Campaign {\n  id: string;\n  status: 'pending' | 'running' | 'paused' | 'completed' | 'failed';\n  startTime?: number;\n  endTime?: number;\n  progress: number;\n  lastActivity: number;\n  errorCount: number;\n  metrics: {\n    totalRequests: number;\n    successfulRequests: number;\n    conversions: number;\n    revenue: number;\n    conversionRate: number;\n  };\n}\n\ninterface ABTest {\n  id: string;\n  status: 'pending' | 'running' | 'paused' | 'completed' | 'failed';\n  startTime?: number;\n  endTime?: number;\n  progress: number;\n  currentSampleSize: number;\n  variantCount: number;\n  hasResults: boolean;\n  errorCount: number;\n}\n\nexport default function AbuseDashboard() {\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\n  const [abTests, setAbTests] = useState<ABTest[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('campaigns');\n\n  // Campaign form state\n  const [campaignForm, setCampaignForm] = useState({\n    id: '',\n    name: '',\n    type: 'mixed',\n    targetUrl: '',\n    duration: 60,\n    protocol: 'REST',\n    rateLimit: 5,\n    sessionDuration: 30,\n    actionsPerSession: 5,\n    bounceRate: 0.3,\n    adClickRate: 0.1,\n    videoWatchRate: 0.2,\n    ctaTriggerRate: 0.05,\n    paymentEnabled: false,\n    affiliateEnabled: false,\n    utmEnabled: false\n  });\n\n  // A/B Test form state\n  const [abTestForm, setAbTestForm] = useState({\n    id: '',\n    name: '',\n    description: '',\n    duration: 60,\n    trafficSplit: 0.5,\n    variants: [\n      { id: 'variant_a', name: 'Variant A', weight: 0.5 },\n      { id: 'variant_b', name: 'Variant B', weight: 0.5 }\n    ]\n  });\n\n  const fetchCampaigns = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/campaign/status');\n      if (response.ok) {\n        const data = await response.json();\n        setCampaigns(data.campaigns || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch campaigns:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchABTests = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/abtest');\n      if (response.ok) {\n        const data = await response.json();\n        setAbTests(data.tests || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch A/B tests:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startCampaign = async () => {\n    try {\n      setLoading(true);\n      \n      const campaignConfig = {\n        id: campaignForm.id || `campaign_${Date.now()}`,\n        name: campaignForm.name,\n        type: campaignForm.type,\n        targetUrl: campaignForm.targetUrl,\n        duration: campaignForm.duration,\n        scrapingConfig: campaignForm.type === 'scraping' || campaignForm.type === 'mixed' ? {\n          targetUrl: campaignForm.targetUrl,\n          protocol: campaignForm.protocol,\n          rateLimit: campaignForm.rateLimit,\n          timeout: 10000,\n          retryAttempts: 3,\n          maxConcurrency: 10\n        } : undefined,\n        abuseConfig: campaignForm.type === 'abuse' || campaignForm.type === 'mixed' ? {\n          targetUrl: campaignForm.targetUrl,\n          sessionDuration: campaignForm.sessionDuration,\n          actionsPerSession: campaignForm.actionsPerSession,\n          bounceRate: campaignForm.bounceRate,\n          adClickRate: campaignForm.adClickRate,\n          videoWatchRate: campaignForm.videoWatchRate,\n          ctaTriggerRate: campaignForm.ctaTriggerRate,\n          scrollDepth: 0.7,\n          timeOnPage: 120\n        } : undefined,\n        paymentConfig: campaignForm.paymentEnabled ? {\n          enabled: true,\n          provider: 'mock',\n          currency: 'USD',\n          amount: 99.99,\n          successRate: 0.85,\n          processingDelay: 2000\n        } : undefined,\n        utmConfig: campaignForm.utmEnabled ? {\n          source: 'campaign',\n          medium: 'bot',\n          campaign: campaignForm.name.toLowerCase().replace(/\\s+/g, '_')\n        } : undefined\n      };\n\n      const response = await fetch('/api/campaign/start', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(campaignConfig)\n      });\n\n      if (response.ok) {\n        await fetchCampaigns();\n        // Reset form\n        setCampaignForm({\n          id: '',\n          name: '',\n          type: 'mixed',\n          targetUrl: '',\n          duration: 60,\n          protocol: 'REST',\n          rateLimit: 5,\n          sessionDuration: 30,\n          actionsPerSession: 5,\n          bounceRate: 0.3,\n          adClickRate: 0.1,\n          videoWatchRate: 0.2,\n          ctaTriggerRate: 0.05,\n          paymentEnabled: false,\n          affiliateEnabled: false,\n          utmEnabled: false\n        });\n      } else {\n        const error = await response.json();\n        alert(`Failed to start campaign: ${error.error}`);\n      }\n    } catch (error) {\n      console.error('Failed to start campaign:', error);\n      alert('Failed to start campaign');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const stopCampaign = async (campaignId: string) => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/campaign/stop', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ campaignId })\n      });\n\n      if (response.ok) {\n        await fetchCampaigns();\n      } else {\n        const error = await response.json();\n        alert(`Failed to stop campaign: ${error.error}`);\n      }\n    } catch (error) {\n      console.error('Failed to stop campaign:', error);\n      alert('Failed to stop campaign');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startABTest = async () => {\n    try {\n      setLoading(true);\n      \n      const testConfig = {\n        id: abTestForm.id || `abtest_${Date.now()}`,\n        name: abTestForm.name,\n        description: abTestForm.description,\n        duration: abTestForm.duration,\n        trafficSplit: abTestForm.trafficSplit,\n        variants: abTestForm.variants.map(variant => ({\n          ...variant,\n          campaignConfig: {\n            id: `${abTestForm.id}_${variant.id}`,\n            name: `${abTestForm.name} - ${variant.name}`,\n            type: 'mixed',\n            targetUrl: campaignForm.targetUrl,\n            duration: abTestForm.duration\n          }\n        })),\n        metrics: ['conversionRate', 'revenue', 'bounceRate'],\n        significanceLevel: 0.05,\n        minSampleSize: 100,\n        autoStop: false\n      };\n\n      const response = await fetch('/api/abtest', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(testConfig)\n      });\n\n      if (response.ok) {\n        await fetchABTests();\n        // Reset form\n        setAbTestForm({\n          id: '',\n          name: '',\n          description: '',\n          duration: 60,\n          trafficSplit: 0.5,\n          variants: [\n            { id: 'variant_a', name: 'Variant A', weight: 0.5 },\n            { id: 'variant_b', name: 'Variant B', weight: 0.5 }\n          ]\n        });\n      } else {\n        const error = await response.json();\n        alert(`Failed to start A/B test: ${error.error}`);\n      }\n    } catch (error) {\n      console.error('Failed to start A/B test:', error);\n      alert('Failed to start A/B test');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportMetrics = async (campaignId: string, format: 'json' | 'csv' = 'json') => {\n    try {\n      const response = await fetch(`/api/campaign/status?campaignId=${campaignId}`);\n      if (response.ok) {\n        const data = await response.json();\n        const exportData = {\n          campaignId,\n          metrics: data.campaign.metrics,\n          exportedAt: new Date().toISOString()\n        };\n\n        let content: string;\n        let filename: string;\n        let mimeType: string;\n\n        if (format === 'csv') {\n          const headers = Object.keys(exportData.metrics).join(',');\n          const values = Object.values(exportData.metrics).join(',');\n          content = `${headers}\\n${values}`;\n          filename = `campaign_${campaignId}_metrics.csv`;\n          mimeType = 'text/csv';\n        } else {\n          content = JSON.stringify(exportData, null, 2);\n          filename = `campaign_${campaignId}_metrics.json`;\n          mimeType = 'application/json';\n        }\n\n        const blob = new Blob([content], { type: mimeType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Failed to export metrics:', error);\n      alert('Failed to export metrics');\n    }\n  };\n\n  useEffect(() => {\n    fetchCampaigns();\n    fetchABTests();\n    \n    // Auto-refresh every 30 seconds\n    const interval = setInterval(() => {\n      if (activeTab === 'campaigns') {\n        fetchCampaigns();\n      } else if (activeTab === 'abtests') {\n        fetchABTests();\n      }\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [activeTab]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'running': return 'bg-green-100 text-green-800';\n      case 'completed': return 'bg-blue-100 text-blue-800';\n      case 'failed': return 'bg-red-100 text-red-800';\n      case 'paused': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDuration = (startTime?: number, endTime?: number) => {\n    if (!startTime) return 'N/A';\n    const duration = (endTime || Date.now()) - startTime;\n    const minutes = Math.floor(duration / 60000);\n    const seconds = Math.floor((duration % 60000) / 1000);\n    return `${minutes}m ${seconds}s`;\n  };\n\n  const campaignStats = {\n    total: campaigns.length,\n    running: campaigns.filter(c => c.status === 'running').length,\n    completed: campaigns.filter(c => c.status === 'completed').length,\n    failed: campaigns.filter(c => c.status === 'failed').length,\n    totalRevenue: campaigns.reduce((sum, c) => sum + (c.metrics?.revenue || 0), 0),\n    totalConversions: campaigns.reduce((sum, c) => sum + (c.metrics?.conversions || 0), 0)\n  };\n\n  const abTestStats = {\n    total: abTests.length,\n    running: abTests.filter(t => t.status === 'running').length,\n    completed: abTests.filter(t => t.status === 'completed').length,\n    totalSampleSize: abTests.reduce((sum, t) => sum + t.currentSampleSize, 0)\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Image */}\n      <div className=\"relative h-40 overflow-hidden rounded-lg bg-gray-100\">\n        <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n          <div className=\"text-center text-white\">\n            <h1 className=\"text-3xl font-bold\">Scraping & Abuse Engine</h1>\n            <p className=\"text-lg\">Advanced Campaign Management & A/B Testing</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{campaignStats.total}</div>\n            <p className=\"text-xs text-gray-600\">Total Campaigns</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">{campaignStats.running}</div>\n            <p className=\"text-xs text-gray-600\">Running</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-blue-600\">{campaignStats.completed}</div>\n            <p className=\"text-xs text-gray-600\">Completed</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">${campaignStats.totalRevenue.toFixed(2)}</div>\n            <p className=\"text-xs text-gray-600\">Total Revenue</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{campaignStats.totalConversions}</div>\n            <p className=\"text-xs text-gray-600\">Conversions</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{abTestStats.running}</div>\n            <p className=\"text-xs text-gray-600\">A/B Tests</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Dashboard */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"campaigns\">Campaigns</TabsTrigger>\n          <TabsTrigger value=\"abtests\">A/B Tests</TabsTrigger>\n          <TabsTrigger value=\"create\">Create New</TabsTrigger>\n        </TabsList>\n\n        {/* Campaigns Tab */}\n        <TabsContent value=\"campaigns\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Active Campaigns</CardTitle>\n              <CardDescription>Monitor and manage your scraping and abuse campaigns</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {campaigns.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  No campaigns found. Create a new campaign to get started.\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {campaigns.map((campaign) => (\n                    <div key={campaign.id} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-3\">\n                          <h3 className=\"font-semibold\">{campaign.id}</h3>\n                          <Badge className={getStatusColor(campaign.status)}>\n                            {campaign.status}\n                          </Badge>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => exportMetrics(campaign.id, 'json')}\n                          >\n                            Export JSON\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => exportMetrics(campaign.id, 'csv')}\n                          >\n                            Export CSV\n                          </Button>\n                          {campaign.status === 'running' && (\n                            <Button\n                              variant=\"destructive\"\n                              size=\"sm\"\n                              onClick={() => stopCampaign(campaign.id)}\n                              disabled={loading}\n                            >\n                              Stop\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 text-sm\">\n                        <div>\n                          <p className=\"text-gray-600\">Duration</p>\n                          <p className=\"font-medium\">{formatDuration(campaign.startTime, campaign.endTime)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Requests</p>\n                          <p className=\"font-medium\">{campaign.metrics?.totalRequests || 0}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Success Rate</p>\n                          <p className=\"font-medium\">\n                            {campaign.metrics?.totalRequests ? \n                              Math.round((campaign.metrics.successfulRequests / campaign.metrics.totalRequests) * 100) : 0}%\n                          </p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Conversions</p>\n                          <p className=\"font-medium\">{campaign.metrics?.conversions || 0}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Revenue</p>\n                          <p className=\"font-medium\">${(campaign.metrics?.revenue || 0).toFixed(2)}</p>\n                        </div>\n                      </div>\n                      \n                      {campaign.status === 'running' && (\n                        <div className=\"mt-3\">\n                          <Progress value={campaign.progress} className=\"h-2\" />\n                          <p className=\"text-xs text-gray-500 mt-1\">Progress: {campaign.progress}%</p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* A/B Tests Tab */}\n        <TabsContent value=\"abtests\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>A/B Tests</CardTitle>\n              <CardDescription>Monitor conversion funnel comparisons and performance metrics</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {abTests.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  No A/B tests found. Create a new test to compare campaign variants.\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {abTests.map((test) => (\n                    <div key={test.id} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-3\">\n                          <h3 className=\"font-semibold\">{test.id}</h3>\n                          <Badge className={getStatusColor(test.status)}>\n                            {test.status}\n                          </Badge>\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <p className=\"text-gray-600\">Duration</p>\n                          <p className=\"font-medium\">{formatDuration(test.startTime, test.endTime)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Sample Size</p>\n                          <p className=\"font-medium\">{test.currentSampleSize}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Variants</p>\n                          <p className=\"font-medium\">{test.variantCount}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-gray-600\">Results</p>\n                          <p className=\"font-medium\">{test.hasResults ? 'Available' : 'Pending'}</p>\n                        </div>\n                      </div>\n                      \n                      {test.status === 'running' && (\n                        <div className=\"mt-3\">\n                          <Progress value={test.progress} className=\"h-2\" />\n                          <p className=\"text-xs text-gray-500 mt-1\">Progress: {test.progress}%</p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Create New Tab */}\n        <TabsContent value=\"create\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Campaign Creation */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Create Campaign</CardTitle>\n                <CardDescription>Start a new scraping or abuse simulation campaign</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"campaign-name\">Campaign Name</Label>\n                    <Input\n                      id=\"campaign-name\"\n                      value={campaignForm.name}\n                      onChange={(e) => setCampaignForm({...campaignForm, name: e.target.value})}\n                      placeholder=\"My Campaign\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"campaign-type\">Type</Label>\n                    <Select value={campaignForm.type} onValueChange={(value) => setCampaignForm({...campaignForm, type: value})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"scraping\">Scraping Only</SelectItem>\n                        <SelectItem value=\"abuse\">Abuse Only</SelectItem>\n                        <SelectItem value=\"mixed\">Mixed (Recommended)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"target-url\">Target URL</Label>\n                  <Input\n                    id=\"target-url\"\n                    value={campaignForm.targetUrl}\n                    onChange={(e) => setCampaignForm({...campaignForm, targetUrl: e.target.value})}\n                    placeholder=\"https://example.com\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"duration\">Duration (minutes)</Label>\n                    <Input\n                      id=\"duration\"\n                      type=\"number\"\n                      value={campaignForm.duration.toString()}\n                      onChange={(e) => setCampaignForm({...campaignForm, duration: parseInt(e.target.value) || 60})}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"protocol\">Protocol</Label>\n                    <Select value={campaignForm.protocol} onValueChange={(value) => setCampaignForm({...campaignForm, protocol: value})}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"REST\">REST</SelectItem>\n                        <SelectItem value=\"AJAX\">AJAX</SelectItem>\n                        <SelectItem value=\"GraphQL\">GraphQL</SelectItem>\n                        <SelectItem value=\"WebSocket\">WebSocket</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"payment-enabled\"\n                      checked={campaignForm.paymentEnabled}\n                      onCheckedChange={(checked) => setCampaignForm({...campaignForm, paymentEnabled: checked})}\n                    />\n                    <Label htmlFor=\"payment-enabled\">Enable Payment Simulation</Label>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"utm-enabled\"\n                      checked={campaignForm.utmEnabled}\n                      onCheckedChange={(checked) => setCampaignForm({...campaignForm, utmEnabled: checked})}\n                    />\n                    <Label htmlFor=\"utm-enabled\">Enable UTM Tracking</Label>\n                  </div>\n                </div>\n\n                <Button \n                  onClick={startCampaign} \n                  disabled={loading || !campaignForm.name || !campaignForm.targetUrl}\n                  className=\"w-full\"\n                >\n                  {loading ? 'Starting...' : 'Start Campaign'}\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* A/B Test Creation */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Create A/B Test</CardTitle>\n                <CardDescription>Compare campaign variants and measure performance</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"test-name\">Test Name</Label>\n                  <Input\n                    id=\"test-name\"\n                    value={abTestForm.name}\n                    onChange={(e) => setAbTestForm({...abTestForm, name: e.target.value})}\n                    placeholder=\"My A/B Test\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"test-description\">Description</Label>\n                  <Textarea\n                    id=\"test-description\"\n                    value={abTestForm.description}\n                    onChange={(e) => setAbTestForm({...abTestForm, description: e.target.value})}\n                    placeholder=\"Test description...\"\n                    rows={3}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"test-duration\">Duration (minutes)</Label>\n                    <Input\n                      id=\"test-duration\"\n                      type=\"number\"\n                      value={abTestForm.duration.toString()}\n                      onChange={(e) => setAbTestForm({...abTestForm, duration: parseInt(e.target.value) || 60})}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"traffic-split\">Traffic Split</Label>\n                    <Input\n                      id=\"traffic-split\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      min=\"0\"\n                      max=\"1\"\n                      value={abTestForm.trafficSplit.toString()}\n                      onChange={(e) => setAbTestForm({...abTestForm, trafficSplit: parseFloat(e.target.value) || 0.5})}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label>Variants</Label>\n                  <div className=\"space-y-2 mt-2\">\n                    {abTestForm.variants.map((variant, index) => (\n                      <div key={variant.id} className=\"flex items-center space-x-2\">\n                        <Input\n                          value={variant.name}\n                          onChange={(e) => {\n                            const newVariants = [...abTestForm.variants];\n                            newVariants[index].name = e.target.value;\n                            setAbTestForm({...abTestForm, variants: newVariants});\n                          }}\n                          placeholder={`Variant ${index + 1} name`}\n                        />\n                        <Input\n                          type=\"number\"\n                          step=\"0.1\"\n                          min=\"0\"\n                          max=\"1\"\n                          value={variant.weight.toString()}\n                          onChange={(e) => {\n                            const newVariants = [...abTestForm.variants];\n                            newVariants[index].weight = parseFloat(e.target.value) || 0.5;\n                            setAbTestForm({...abTestForm, variants: newVariants});\n                          }}\n                          className=\"w-20\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Button \n                  onClick={startABTest} \n                  disabled={loading || !abTestForm.name || !campaignForm.targetUrl}\n                  className=\"w-full\"\n                >\n                  {loading ? 'Starting...' : 'Start A/B Test'}\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3375, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BotHistory.tsx"],"sourcesContent":["/**\n * BotHistory.tsx\n * Component for displaying historical bot session data\n */\n\n\"use client\"\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\ninterface BotSession {\n  id: string;\n  personaId: string;\n  personaName: string;\n  status: 'completed' | 'failed' | 'stopped';\n  startTime: number;\n  endTime: number;\n  duration: number;\n  errorCount: number;\n  lastError?: string;\n  location: string;\n  behaviorPattern: string;\n}\n\nexport default function BotHistory() {\n  const [sessions, setSessions] = useState<BotSession[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [personaFilter, setPersonaFilter] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState<'startTime' | 'duration' | 'errorCount'>('startTime');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  const fetchBotHistory = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      if (statusFilter !== 'all') {\n        params.append('status', statusFilter);\n      }\n      if (personaFilter !== 'all') {\n        params.append('personaId', personaFilter);\n      }\n      if (searchTerm) {\n        params.append('search', searchTerm);\n      }\n      params.append('sortBy', sortBy);\n      params.append('sortOrder', sortOrder);\n      params.append('limit', '50');\n\n      const response = await fetch(`/api/bot/history?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSessions(data.success ? data.data.sessions : []);\n      } else {\n        console.error('Failed to fetch bot history');\n        setSessions([]);\n      }\n    } catch (error) {\n      console.error('Failed to fetch bot history:', error);\n      setSessions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportHistory = async (format: 'json' | 'csv' = 'json') => {\n    try {\n      const params = new URLSearchParams();\n      params.append('format', format);\n      if (statusFilter !== 'all') params.append('status', statusFilter);\n      if (personaFilter !== 'all') params.append('personaId', personaFilter);\n      if (searchTerm) params.append('search', searchTerm);\n\n      const response = await fetch(`/api/bot/history/export?${params}`);\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `bot-history-${Date.now()}.${format}`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Failed to export history:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBotHistory();\n  }, [statusFilter, personaFilter, sortBy, sortOrder]);\n\n  useEffect(() => {\n    const debounceTimer = setTimeout(() => {\n      if (searchTerm !== '') {\n        fetchBotHistory();\n      }\n    }, 500);\n\n    return () => clearTimeout(debounceTimer);\n  }, [searchTerm]);\n\n  const formatDuration = (duration: number) => {\n    const hours = Math.floor(duration / 3600000);\n    const minutes = Math.floor((duration % 3600000) / 60000);\n    const seconds = Math.floor((duration % 60000) / 1000);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${seconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'bg-green-100 text-green-800';\n      case 'failed': return 'bg-red-100 text-red-800';\n      case 'stopped': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getUniquePersonas = () => {\n    const personas = sessions.map(session => ({\n      id: session.personaId,\n      name: session.personaName\n    }));\n    const unique = personas.filter((persona, index, self) => \n      index === self.findIndex(p => p.id === persona.id)\n    );\n    return unique;\n  };\n\n  const historyStats = {\n    total: sessions.length,\n    completed: sessions.filter(s => s.status === 'completed').length,\n    failed: sessions.filter(s => s.status === 'failed').length,\n    stopped: sessions.filter(s => s.status === 'stopped').length,\n    totalDuration: sessions.reduce((sum, s) => sum + s.duration, 0),\n    averageDuration: sessions.length > 0 ? sessions.reduce((sum, s) => sum + s.duration, 0) / sessions.length : 0,\n    totalErrors: sessions.reduce((sum, s) => sum + s.errorCount, 0)\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"relative h-32 overflow-hidden rounded-lg bg-gradient-to-r from-gray-900 to-gray-700\">\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-center text-white\">\n            <h2 className=\"text-2xl font-bold\">Bot History</h2>\n            <p className=\"text-sm opacity-90\">Historical bot session data and analytics</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{historyStats.total}</div>\n            <p className=\"text-xs text-gray-600\">Total Sessions</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">{historyStats.completed}</div>\n            <p className=\"text-xs text-gray-600\">Completed</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-red-600\">{historyStats.failed}</div>\n            <p className=\"text-xs text-gray-600\">Failed</p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{formatDuration(historyStats.averageDuration)}</div>\n            <p className=\"text-xs text-gray-600\">Avg Duration</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters and Controls */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Filters & Controls</CardTitle>\n          <CardDescription>Filter and search through bot session history</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div>\n              <Label htmlFor=\"search\">Search</Label>\n              <Input\n                id=\"search\"\n                placeholder=\"Search by bot ID or persona...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"status-filter\">Status</Label>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                  <SelectItem value=\"failed\">Failed</SelectItem>\n                  <SelectItem value=\"stopped\">Stopped</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"persona-filter\">Persona</Label>\n              <Select value={personaFilter} onValueChange={setPersonaFilter}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Personas</SelectItem>\n                  {getUniquePersonas().map((persona) => (\n                    <SelectItem key={persona.id} value={persona.id}>\n                      {persona.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"sort-by\">Sort By</Label>\n              <Select value={sortBy} onValueChange={(value: any) => setSortBy(value)}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"startTime\">Start Time</SelectItem>\n                  <SelectItem value=\"duration\">Duration</SelectItem>\n                  <SelectItem value=\"errorCount\">Error Count</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"flex flex-wrap gap-2 mt-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n            >\n              Sort {sortOrder === 'asc' ? 'Descending' : 'Ascending'}\n            </Button>\n            \n            <Button variant=\"outline\" size=\"sm\" onClick={fetchBotHistory} disabled={loading}>\n              {loading ? 'Refreshing...' : 'Refresh'}\n            </Button>\n            \n            <Button variant=\"outline\" size=\"sm\" onClick={() => exportHistory('json')}>\n              Export JSON\n            </Button>\n            \n            <Button variant=\"outline\" size=\"sm\" onClick={() => exportHistory('csv')}>\n              Export CSV\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* History Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Session History</CardTitle>\n          <CardDescription>\n            {sessions.length} sessions found\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-500\">Loading bot history...</div>\n            </div>\n          ) : sessions.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              No bot sessions found. Adjust your filters or start some bots to see history.\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border-collapse border border-gray-200 text-sm\">\n                <thead>\n                  <tr className=\"bg-gray-50\">\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Bot ID</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Persona</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Status</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Duration</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Errors</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Started</th>\n                    <th className=\"border border-gray-200 px-4 py-2 text-left font-medium\">Location</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {sessions.map((session) => (\n                    <tr key={session.id} className=\"hover:bg-gray-50\">\n                      <td className=\"border border-gray-200 px-4 py-2 font-mono text-xs\">\n                        {session.id.substring(0, 12)}...\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2\">\n                        <div>\n                          <div className=\"font-medium\">{session.personaName}</div>\n                          <div className=\"text-xs text-gray-500\">{session.behaviorPattern}</div>\n                        </div>\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2\">\n                        <Badge className={getStatusColor(session.status)}>\n                          {session.status}\n                        </Badge>\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2\">\n                        {formatDuration(session.duration)}\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2\">\n                        <span className={session.errorCount > 0 ? 'text-red-600 font-medium' : ''}>\n                          {session.errorCount}\n                        </span>\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2 text-xs\">\n                        {new Date(session.startTime).toLocaleString()}\n                      </td>\n                      <td className=\"border border-gray-200 px-4 py-2 text-xs\">\n                        {session.location}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4324, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 4399, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Slider({\n  className,\n  defaultValue,\n  value,\n  min = 0,\n  max = 100,\n  ...props\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\n  const _values = React.useMemo(\n    () =>\n      Array.isArray(value)\n        ? value\n        : Array.isArray(defaultValue)\n          ? defaultValue\n          : [min, max],\n    [value, defaultValue, min, max]\n  )\n\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      defaultValue={defaultValue}\n      value={value}\n      min={min}\n      max={max}\n      className={cn(\n        \"relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\",\n        className\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track\n        data-slot=\"slider-track\"\n        className={cn(\n          \"bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\"\n        )}\n      >\n        <SliderPrimitive.Range\n          data-slot=\"slider-range\"\n          className={cn(\n            \"bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\"\n          )}\n        />\n      </SliderPrimitive.Track>\n      {Array.from({ length: _values.length }, (_, index) => (\n        <SliderPrimitive.Thumb\n          data-slot=\"slider-thumb\"\n          key={index}\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\n        />\n      ))}\n    </SliderPrimitive.Root>\n  )\n}\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,CAAC,EACP,MAAM,GAAG,EACT,GAAG,OAC+C;;IAClD,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD;mCAC1B,IACE,MAAM,OAAO,CAAC,SACV,QACA,MAAM,OAAO,CAAC,gBACZ,eACA;gBAAC;gBAAK;aAAI;kCAClB;QAAC;QAAO;QAAc;QAAK;KAAI;IAGjC,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,cAAc;QACd,OAAO;QACP,KAAK;QACL,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uOACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBACpB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;0BAGF,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBACpB,aAAU;oBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;YAIL,MAAM,IAAI,CAAC;gBAAE,QAAQ,QAAQ,MAAM;YAAC,GAAG,CAAC,GAAG,sBAC1C,6LAAC,qKAAA,CAAA,QAAqB;oBACpB,aAAU;oBAEV,WAAU;mBADL;;;;;;;;;;;AAMf;GArDS;KAAA","debugId":null}},
    {"offset": {"line": 4481, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/SystemConfigPanel.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Switch } from '@/components/ui/switch'\nimport { Separator } from '@/components/ui/separator'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Slider } from '@/components/ui/slider'\n\ninterface SystemConfig {\n  aiLearning: {\n    enabled: boolean;\n    learningRate: number;\n    errorThreshold: number;\n    adaptiveBehaviorEnabled: boolean;\n    confidenceThreshold: number;\n    maxAdjustmentsPerHour: number;\n    aiProvider: 'openrouter' | 'deepseek' | 'local';\n    aiModel: string;\n    aiApiKey: string;\n    fallbackModel: string;\n    maxRetries: number;\n    timeoutMs: number;\n  };\n  captcha: {\n    mode: 'local' | 'cloud' | 'auto';\n    services: {\n      capSolver: {\n        enabled: boolean;\n        apiKey: string;\n        priority: number;\n      };\n      capMonster: {\n        enabled: boolean;\n        apiKey: string;\n        priority: number;\n      };\n      local: {\n        enabled: boolean;\n        engine: 'tesseract' | 'paddleocr';\n        confidenceThreshold: number;\n      };\n    };\n    maxRetries: number;\n    timeout: number;\n  };\n  network: {\n    proxy: {\n      enabled: boolean;\n      mode: 'free' | 'paid' | 'mixed';\n      residential: {\n        enabled: boolean;\n        providers: string[];\n        apiKeys: Record<string, string>;\n        rotationInterval: number;\n        failoverEnabled: boolean;\n      };\n    };\n  };\n  webhookUrl: string;\n  discordWebhook: string;\n}\n\nexport default function SystemConfigPanel() {\n  const [config, setConfig] = useState<SystemConfig | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  // Fetch current configuration\n  const fetchConfig = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch('/api/config')\n      if (response.ok) {\n        const data = await response.json()\n        setConfig(data.config)\n        setError(null)\n      } else {\n        throw new Error('Failed to fetch configuration')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error')\n      console.error('Failed to fetch config:', err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Save configuration\n  const saveConfig = async (updates: Partial<SystemConfig>) => {\n    try {\n      setSaving(true)\n      const response = await fetch('/api/config', {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updates)\n      })\n      \n      if (response.ok) {\n        await fetchConfig()\n        setSuccess('Configuration saved successfully!')\n        setTimeout(() => setSuccess(null), 3000)\n        setError(null)\n      } else {\n        const errorData = await response.json()\n        throw new Error(errorData.error || 'Failed to save configuration')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to save configuration')\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchConfig()\n  }, [])\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"text-center py-8\">\n          <div className=\"text-lg font-medium\">Loading System Configuration...</div>\n          <div className=\"text-sm text-gray-500 mt-2\">Fetching current settings</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error && !config) {\n    return (\n      <div className=\"space-y-6\">\n        <Alert>\n          <AlertDescription>Error loading configuration: {error}</AlertDescription>\n        </Alert>\n        <Button onClick={fetchConfig} disabled={loading}>Retry</Button>\n      </div>\n    )\n  }\n\n  if (!config) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"text-center py-8 text-gray-500\">No configuration available</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold\">System Configuration</h2>\n          <p className=\"text-gray-600 mt-1\">Comprehensive control panel for all bot system settings</p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <Button onClick={() => fetchConfig()} disabled={loading} variant=\"outline\" size=\"sm\">\n            {loading ? 'Refreshing...' : 'Refresh'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Status Messages */}\n      {error && (\n        <Alert>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n      \n      {success && (\n        <Alert>\n          <AlertDescription className=\"text-green-800\">{success}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Configuration Tabs */}\n      <Tabs defaultValue=\"ai\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"ai\">AI & Learning</TabsTrigger>\n          <TabsTrigger value=\"captcha\">Captcha & OCR</TabsTrigger>\n          <TabsTrigger value=\"network\">Network & Proxy</TabsTrigger>\n          <TabsTrigger value=\"alerts\">Alerts & Webhooks</TabsTrigger>\n        </TabsList>\n\n        {/* AI & Learning Configuration */}\n        <TabsContent value=\"ai\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>AI Learning Configuration</CardTitle>\n              <CardDescription>Configure AI supervisor and learning parameters with fallback mechanisms</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {/* Master Controls */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"ai-enabled\">AI Learning Enabled</Label>\n                    <Switch\n                      id=\"ai-enabled\"\n                      checked={config.aiLearning.enabled}\n                      onCheckedChange={(checked) => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, enabled: checked } }\n                        setConfig(newConfig)\n                        saveConfig({ aiLearning: newConfig.aiLearning })\n                      }}\n                      disabled={saving}\n                    />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"adaptive-enabled\">Adaptive Behavior</Label>\n                    <Switch\n                      id=\"adaptive-enabled\"\n                      checked={config.aiLearning.adaptiveBehaviorEnabled}\n                      onCheckedChange={(checked) => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, adaptiveBehaviorEnabled: checked } }\n                        setConfig(newConfig)\n                        saveConfig({ aiLearning: newConfig.aiLearning })\n                      }}\n                      disabled={saving || !config.aiLearning.enabled}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"ai-provider\">AI Provider</Label>\n                    <Select\n                      value={config.aiLearning.aiProvider}\n                      onValueChange={(value: 'openrouter' | 'deepseek' | 'local') => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, aiProvider: value } }\n                        setConfig(newConfig)\n                        saveConfig({ aiLearning: newConfig.aiLearning })\n                      }}\n                      disabled={saving}\n                    >\n                      <SelectTrigger className=\"mt-2\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"openrouter\">OpenRouter (Recommended)</SelectItem>\n                        <SelectItem value=\"deepseek\">DeepSeek</SelectItem>\n                        <SelectItem value=\"local\">Local Model</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      OpenRouter provides access to multiple AI models with fallback support\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"ai-model\">Primary AI Model</Label>\n                    <Input\n                      id=\"ai-model\"\n                      value={config.aiLearning.aiModel}\n                      onChange={(e) => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, aiModel: e.target.value } }\n                        setConfig(newConfig)\n                      }}\n                      onBlur={() => saveConfig({ aiLearning: config.aiLearning })}\n                      disabled={saving}\n                      className=\"mt-2\"\n                      placeholder=\"e.g., openai/gpt-4o\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <Separator />\n\n              {/* API Configuration */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-lg font-medium\">API Configuration</h4>\n                \n                <div>\n                  <Label htmlFor=\"ai-api-key\">API Key</Label>\n                  <Input\n                    id=\"ai-api-key\"\n                    type=\"password\"\n                    value={config.aiLearning.aiApiKey}\n                    onChange={(e) => {\n                      const newConfig = { ...config, aiLearning: { ...config.aiLearning, aiApiKey: e.target.value } }\n                      setConfig(newConfig)\n                    }}\n                    onBlur={() => saveConfig({ aiLearning: config.aiLearning })}\n                    disabled={saving}\n                    className=\"mt-2\"\n                    placeholder=\"Enter your AI provider API key\"\n                  />\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    Status: {config.aiLearning.aiApiKey ? 'Configured' : 'Not configured'}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"max-retries\">Max Retries: {config.aiLearning.maxRetries}</Label>\n                    <Slider\n                      id=\"max-retries\"\n                      min={1}\n                      max={10}\n                      step={1}\n                      value={[config.aiLearning.maxRetries]}\n                      onValueChange={([value]) => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, maxRetries: value } }\n                        setConfig(newConfig)\n                      }}\n                      onValueCommit={() => saveConfig({ aiLearning: config.aiLearning })}\n                      disabled={saving}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"timeout\">Timeout (ms): {config.aiLearning.timeoutMs}</Label>\n                    <Slider\n                      id=\"timeout\"\n                      min={5000}\n                      max={120000}\n                      step={5000}\n                      value={[config.aiLearning.timeoutMs]}\n                      onValueChange={([value]) => {\n                        const newConfig = { ...config, aiLearning: { ...config.aiLearning, timeoutMs: value } }\n                        setConfig(newConfig)\n                      }}\n                      onValueCommit={() => saveConfig({ aiLearning: config.aiLearning })}\n                      disabled={saving}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Captcha Configuration */}\n        <TabsContent value=\"captcha\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Captcha & OCR Configuration</CardTitle>\n              <CardDescription>Configure captcha solving services with fallback chain</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div>\n                <Label htmlFor=\"captcha-mode\">Captcha Mode</Label>\n                <Select\n                  value={config.captcha.mode}\n                  onValueChange={(value: 'local' | 'cloud' | 'auto') => {\n                    const newConfig = { ...config, captcha: { ...config.captcha, mode: value } }\n                    setConfig(newConfig)\n                    saveConfig({ captcha: newConfig.captcha })\n                  }}\n                  disabled={saving}\n                >\n                  <SelectTrigger className=\"mt-2\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"auto\">Auto (Recommended)</SelectItem>\n                    <SelectItem value=\"local\">Local Only</SelectItem>\n                    <SelectItem value=\"cloud\">Cloud Only</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <Separator />\n\n              {/* Captcha Services */}\n              <div className=\"space-y-6\">\n                <h4 className=\"text-lg font-medium\">Captcha Services</h4>\n                \n                {/* CapSolver */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"capsolver-enabled\">CapSolver</Label>\n                    <Switch\n                      id=\"capsolver-enabled\"\n                      checked={config.captcha.services.capSolver.enabled}\n                      onCheckedChange={(checked) => {\n                        const newConfig = {\n                          ...config,\n                          captcha: {\n                            ...config.captcha,\n                            services: {\n                              ...config.captcha.services,\n                              capSolver: { ...config.captcha.services.capSolver, enabled: checked }\n                            }\n                          }\n                        }\n                        setConfig(newConfig)\n                        saveConfig({ captcha: newConfig.captcha })\n                      }}\n                      disabled={saving}\n                    />\n                  </div>\n                  \n                  {config.captcha.services.capSolver.enabled && (\n                    <div>\n                      <Label htmlFor=\"capsolver-key\">CapSolver API Key</Label>\n                      <Input\n                        id=\"capsolver-key\"\n                        type=\"password\"\n                        value={config.captcha.services.capSolver.apiKey}\n                        onChange={(e) => {\n                          const newConfig = {\n                            ...config,\n                            captcha: {\n                              ...config.captcha,\n                              services: {\n                                ...config.captcha.services,\n                                capSolver: { ...config.captcha.services.capSolver, apiKey: e.target.value }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                        }}\n                        onBlur={() => saveConfig({ captcha: config.captcha })}\n                        disabled={saving}\n                        className=\"mt-2\"\n                        placeholder=\"Enter CapSolver API key\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {/* CapMonster */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"capmonster-enabled\">CapMonster</Label>\n                    <Switch\n                      id=\"capmonster-enabled\"\n                      checked={config.captcha.services.capMonster.enabled}\n                      onCheckedChange={(checked) => {\n                        const newConfig = {\n                          ...config,\n                          captcha: {\n                            ...config.captcha,\n                            services: {\n                              ...config.captcha.services,\n                              capMonster: { ...config.captcha.services.capMonster, enabled: checked }\n                            }\n                          }\n                        }\n                        setConfig(newConfig)\n                        saveConfig({ captcha: newConfig.captcha })\n                      }}\n                      disabled={saving}\n                    />\n                  </div>\n                  \n                  {config.captcha.services.capMonster.enabled && (\n                    <div>\n                      <Label htmlFor=\"capmonster-key\">CapMonster API Key</Label>\n                      <Input\n                        id=\"capmonster-key\"\n                        type=\"password\"\n                        value={config.captcha.services.capMonster.apiKey}\n                        onChange={(e) => {\n                          const newConfig = {\n                            ...config,\n                            captcha: {\n                              ...config.captcha,\n                              services: {\n                                ...config.captcha.services,\n                                capMonster: { ...config.captcha.services.capMonster, apiKey: e.target.value }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                        }}\n                        onBlur={() => saveConfig({ captcha: config.captcha })}\n                        disabled={saving}\n                        className=\"mt-2\"\n                        placeholder=\"Enter CapMonster API key\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {/* Local OCR */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"local-ocr-enabled\">Local OCR</Label>\n                    <Switch\n                      id=\"local-ocr-enabled\"\n                      checked={config.captcha.services.local.enabled}\n                      onCheckedChange={(checked) => {\n                        const newConfig = {\n                          ...config,\n                          captcha: {\n                            ...config.captcha,\n                            services: {\n                              ...config.captcha.services,\n                              local: { ...config.captcha.services.local, enabled: checked }\n                            }\n                          }\n                        }\n                        setConfig(newConfig)\n                        saveConfig({ captcha: newConfig.captcha })\n                      }}\n                      disabled={saving}\n                    />\n                  </div>\n                  \n                  {config.captcha.services.local.enabled && (\n                    <div>\n                      <Label htmlFor=\"ocr-engine\">OCR Engine</Label>\n                      <Select\n                        value={config.captcha.services.local.engine}\n                        onValueChange={(value: 'tesseract' | 'paddleocr') => {\n                          const newConfig = {\n                            ...config,\n                            captcha: {\n                              ...config.captcha,\n                              services: {\n                                ...config.captcha.services,\n                                local: { ...config.captcha.services.local, engine: value }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                          saveConfig({ captcha: newConfig.captcha })\n                        }}\n                        disabled={saving}\n                      >\n                        <SelectTrigger className=\"mt-2\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"tesseract\">Tesseract (Free)</SelectItem>\n                          <SelectItem value=\"paddleocr\">PaddleOCR (Better Accuracy)</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Network Configuration */}\n        <TabsContent value=\"network\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Network & Proxy Configuration</CardTitle>\n              <CardDescription>Configure proxy settings and network behavior</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"proxy-enabled\">Proxy Enabled</Label>\n                  <Switch\n                    id=\"proxy-enabled\"\n                    checked={config.network.proxy.enabled}\n                    onCheckedChange={(checked) => {\n                      const newConfig = {\n                        ...config,\n                        network: {\n                          ...config.network,\n                          proxy: { ...config.network.proxy, enabled: checked }\n                        }\n                      }\n                      setConfig(newConfig)\n                      saveConfig({ network: newConfig.network })\n                    }}\n                    disabled={saving}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"proxy-mode\">Proxy Mode</Label>\n                  <Select\n                    value={config.network.proxy.mode}\n                    onValueChange={(value: 'free' | 'paid' | 'mixed') => {\n                      const newConfig = {\n                        ...config,\n                        network: {\n                          ...config.network,\n                          proxy: { ...config.network.proxy, mode: value }\n                        }\n                      }\n                      setConfig(newConfig)\n                      saveConfig({ network: newConfig.network })\n                    }}\n                    disabled={saving || !config.network.proxy.enabled}\n                  >\n                    <SelectTrigger className=\"mt-2\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"free\">Free Proxies Only</SelectItem>\n                      <SelectItem value=\"paid\">Paid Proxies Only</SelectItem>\n                      <SelectItem value=\"mixed\">Mixed (Recommended)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {config.network.proxy.enabled && (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"residential-enabled\">Residential Proxies</Label>\n                      <Switch\n                        id=\"residential-enabled\"\n                        checked={config.network.proxy.residential.enabled}\n                        onCheckedChange={(checked) => {\n                          const newConfig = {\n                            ...config,\n                            network: {\n                              ...config.network,\n                              proxy: {\n                                ...config.network.proxy,\n                                residential: { ...config.network.proxy.residential, enabled: checked }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                          saveConfig({ network: newConfig.network })\n                        }}\n                        disabled={saving}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <Label htmlFor=\"failover-enabled\">Failover Enabled</Label>\n                      <Switch\n                        id=\"failover-enabled\"\n                        checked={config.network.proxy.residential.failoverEnabled}\n                        onCheckedChange={(checked) => {\n                          const newConfig = {\n                            ...config,\n                            network: {\n                              ...config.network,\n                              proxy: {\n                                ...config.network.proxy,\n                                residential: { ...config.network.proxy.residential, failoverEnabled: checked }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                          saveConfig({ network: newConfig.network })\n                        }}\n                        disabled={saving || !config.network.proxy.residential.enabled}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"rotation-interval\">Rotation Interval (minutes): {Math.round(config.network.proxy.residential.rotationInterval / 60000)}</Label>\n                      <Slider\n                        id=\"rotation-interval\"\n                        min={1}\n                        max={60}\n                        step={1}\n                        value={[Math.round(config.network.proxy.residential.rotationInterval / 60000)]}\n                        onValueChange={([value]) => {\n                          const newConfig = {\n                            ...config,\n                            network: {\n                              ...config.network,\n                              proxy: {\n                                ...config.network.proxy,\n                                residential: { ...config.network.proxy.residential, rotationInterval: value * 60000 }\n                              }\n                            }\n                          }\n                          setConfig(newConfig)\n                        }}\n                        onValueCommit={() => saveConfig({ network: config.network })}\n                        disabled={saving || !config.network.proxy.residential.enabled}\n                        className=\"mt-2\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Alerts Configuration */}\n        <TabsContent value=\"alerts\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Alerts & Webhooks</CardTitle>\n              <CardDescription>Configure notification endpoints for system alerts</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div>\n                <Label htmlFor=\"webhook-url\">General Webhook URL</Label>\n                <Input\n                  id=\"webhook-url\"\n                  type=\"url\"\n                  value={config.webhookUrl}\n                  onChange={(e) => {\n                    const newConfig = { ...config, webhookUrl: e.target.value }\n                    setConfig(newConfig)\n                  }}\n                  onBlur={() => saveConfig({ webhookUrl: config.webhookUrl })}\n                  disabled={saving}\n                  className=\"mt-2\"\n                  placeholder=\"https://your-webhook-endpoint.com/webhook\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  General webhook for system notifications\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"discord-webhook\">Discord Webhook URL</Label>\n                <Input\n                  id=\"discord-webhook\"\n                  type=\"url\"\n                  value={config.discordWebhook}\n                  onChange={(e) => {\n                    const newConfig = { ...config, discordWebhook: e.target.value }\n                    setConfig(newConfig)\n                  }}\n                  onBlur={() => saveConfig({ discordWebhook: config.discordWebhook })}\n                  disabled={saving}\n                  className=\"mt-2\"\n                  placeholder=\"https://discord.com/api/webhooks/...\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Discord channel webhook for real-time alerts\n                </div>\n              </div>\n\n              <div className=\"text-sm text-gray-600 p-4 bg-gray-50 rounded-lg\">\n                <h5 className=\"font-medium mb-2\">Webhook Features:</h5>\n                <ul className=\"space-y-1 text-xs\">\n                  <li>• Bot status changes (start/stop/error)</li>\n                  <li>• Captcha solving failures</li>\n                  <li>• Proxy connection issues</li>\n                  <li>• AI learning adjustments</li>\n                  <li>• System performance alerts</li>\n                </ul>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6289, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport CommandCenter from '@/components/CommandCenter'\nimport AbuseDashboard from '@/components/AbuseDashboard'\nimport BotHistory from '@/components/BotHistory'\nimport AISupervisorDashboard from '@/components/AISupervisorDashboard'\nimport SystemConfigPanel from '@/components/SystemConfigPanel'\n\ninterface Bot {\n  id: string\n  status: 'active' | 'inactive' | 'starting' | 'stopping'\n  personaId: string\n  startTime?: number\n  lastActivity?: number\n}\n\ninterface Persona {\n  id: string\n  name: string\n  location: string\n  personalityTraits: string[]\n}\n\nexport default function Dashboard() {\n  const [bots, setBots] = useState<Bot[]>([])\n  const [personas, setPersonas] = useState<Persona[]>([])\n  const [loading, setLoading] = useState(false)\n  const [selectedPersona, setSelectedPersona] = useState<string>('')\n  const [newPersonaName, setNewPersonaName] = useState('')\n  const [newPersonaLocation, setNewPersonaLocation] = useState('')\n\n  // Fetch bot status\n  const fetchBotStatus = async () => {\n    try {\n      const response = await fetch('/api/bot/status')\n      if (response.ok) {\n        const data = await response.json()\n        setBots(data.bots || [])\n      }\n    } catch (error) {\n      console.error('Failed to fetch bot status:', error)\n    }\n  }\n\n  // Create new persona\n  const createPersona = async () => {\n    if (!newPersonaName || !newPersonaLocation) return\n    \n    setLoading(true)\n    try {\n      const response = await fetch('/api/persona/create', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name: newPersonaName,\n          location: newPersonaLocation\n        })\n      })\n      \n      if (response.ok) {\n        const persona = await response.json()\n        setPersonas((prev: Persona[]) => [...prev, persona])\n        setNewPersonaName('')\n        setNewPersonaLocation('')\n      }\n    } catch (error) {\n      console.error('Failed to create persona:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Start bot\n  const startBot = async () => {\n    if (!selectedPersona) return\n    \n    setLoading(true)\n    try {\n      const response = await fetch('/api/bot/start', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          personaId: selectedPersona,\n          config: { behavior: 'random' }\n        })\n      })\n      \n      if (response.ok) {\n        await fetchBotStatus()\n      }\n    } catch (error) {\n      console.error('Failed to start bot:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Stop bot\n  const stopBot = async (botId: string) => {\n    setLoading(true)\n    try {\n      const response = await fetch('/api/bot/stop', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ botId })\n      })\n      \n      if (response.ok) {\n        await fetchBotStatus()\n      }\n    } catch (error) {\n      console.error('Failed to stop bot:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchBotStatus()\n    const interval = setInterval(fetchBotStatus, 5000) // Refresh every 5 seconds\n    return () => clearInterval(interval)\n  }, [])\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800'\n      case 'inactive': return 'bg-gray-100 text-gray-800'\n      case 'starting': return 'bg-yellow-100 text-yellow-800'\n      case 'stopping': return 'bg-red-100 text-red-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header Image */}\n      <div className=\"relative h-48 overflow-hidden rounded-lg bg-gray-100\">\n        <img \n          src=\"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/3225ef3e-7058-482d-bceb-300e8f9ff4cc.png\" \n          alt=\"Modern stealth bot control dashboard with clean minimalist design\"\n          className=\"w-full h-full object-cover\"\n          onError={(e: any) => {\n            e.currentTarget.style.display = 'none'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center\">\n          <div className=\"text-center text-white\">\n            <h1 className=\"text-4xl font-bold mb-2\">Stealth Bot Control System</h1>\n            <p className=\"text-xl\">Advanced Multi-Phase Bot Management</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Active Bots</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {bots.filter((bot: Bot) => bot.status === 'active').length}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Total Bots</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{bots.length}</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Personas</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{personas.length}</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600\">System Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Badge className=\"bg-green-100 text-green-800\">Online</Badge>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content Tabs */}\n      <Tabs defaultValue=\"control\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"control\">Bot Control</TabsTrigger>\n          <TabsTrigger value=\"command\">Command Center</TabsTrigger>\n          <TabsTrigger value=\"abuse\">Scraping & Abuse</TabsTrigger>\n          <TabsTrigger value=\"ai\">AI Insights</TabsTrigger>\n          <TabsTrigger value=\"history\">Bot History</TabsTrigger>\n          <TabsTrigger value=\"config\">System Config</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"control\" className=\"space-y-8\">\n          {/* Bot Control Panel */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Create Persona */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Create New Persona</CardTitle>\n                <CardDescription>Generate a new bot persona with unique characteristics</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"persona-name\">Name</Label>\n                  <Input\n                    id=\"persona-name\"\n                    value={newPersonaName}\n                    onChange={(e: any) => setNewPersonaName(e.target.value)}\n                    placeholder=\"Enter persona name\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"persona-location\">Location</Label>\n                  <Select value={newPersonaLocation} onValueChange={setNewPersonaLocation}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select location\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Bandung\">Bandung</SelectItem>\n                      <SelectItem value=\"Jakarta\">Jakarta</SelectItem>\n                      <SelectItem value=\"Surabaya\">Surabaya</SelectItem>\n                      <SelectItem value=\"Yogyakarta\">Yogyakarta</SelectItem>\n                      <SelectItem value=\"Medan\">Medan</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <Button onClick={createPersona} disabled={loading} className=\"w-full\">\n                  {loading ? 'Creating...' : 'Create Persona'}\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Start Bot */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Start New Bot</CardTitle>\n                <CardDescription>Launch a bot with selected persona</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"select-persona\">Select Persona</Label>\n                  <Select value={selectedPersona} onValueChange={setSelectedPersona}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Choose a persona\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {personas.map((persona: Persona) => (\n                        <SelectItem key={persona.id} value={persona.id}>\n                          {persona.name} ({persona.location})\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <Button onClick={startBot} disabled={loading || !selectedPersona} className=\"w-full\">\n                  {loading ? 'Starting...' : 'Start Bot'}\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Active Bots List */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Active Bots</CardTitle>\n              <CardDescription>Monitor and control your bot instances</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {bots.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  No bots currently running. Create a persona and start your first bot.\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {bots.map((bot: Bot) => (\n                    <div key={bot.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div>\n                          <div className=\"font-medium\">{bot.id}</div>\n                          <div className=\"text-sm text-gray-500\">Persona: {bot.personaId}</div>\n                          {bot.startTime && (\n                            <div className=\"text-xs text-gray-400\">\n                              Started: {new Date(bot.startTime).toLocaleTimeString()}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <Badge className={getStatusColor(bot.status)}>\n                          {bot.status}\n                        </Badge>\n                        {bot.status === 'active' && (\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => stopBot(bot.id)}\n                            disabled={loading}\n                          >\n                            Stop\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"command\">\n          <CommandCenter />\n        </TabsContent>\n        \n        <TabsContent value=\"abuse\">\n          <AbuseDashboard />\n        </TabsContent>\n        \n        <TabsContent value=\"ai\">\n          <AISupervisorDashboard />\n        </TabsContent>\n        \n        <TabsContent value=\"history\">\n          <BotHistory />\n        </TabsContent>\n        \n        <TabsContent value=\"config\">\n          <SystemConfigPanel />\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}